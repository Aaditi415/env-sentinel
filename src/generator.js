import fs from "fs";
import path from "path";
import os from "os";

const SENSITIVE_KEYS = ["password", "api_key", "jwt_secret"];

export function generateEnvExample(schema, filePath = ".env.example", options = { force: false }) {
  if (!schema || Object.keys(schema).length === 0) {
    console.warn("⚠️  Schema is empty. Nothing to generate.");
    return;
  }

  const outPath = path.resolve(process.cwd(), filePath);

  // Avoid overwriting existing file
  if (fs.existsSync(outPath) && !options.force) {
    console.warn(`⚠️  ${filePath} already exists. Use --force to overwrite.`);
    return;
  }

  let content = "# Auto-generated by EnvSentinel\n\n";

  for (const key in schema) {
    const rule = schema[key];
    const description = rule.description ? `# ${rule.description}${os.EOL}` : "";
    let defaultVal = rule.default !== undefined ? schema[key].default : "";

    // Clear sensitive fields
    if (SENSITIVE_KEYS.includes(key.toLowerCase()) || rule.type === "password") {
      defaultVal = "";
    }

    content += `${description}${key}=${defaultVal}${os.EOL}`;
  }

  fs.writeFileSync(outPath, content.trim() + os.EOL, "utf-8");
  console.log(`✅ ${filePath} generated successfully!`);
}
